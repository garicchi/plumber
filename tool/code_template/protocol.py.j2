#
# This code was generated by code generator
#
import json

{% for name, proto in protocol.items() %}
class {{name}}_req:
    {% for k, v in proto['req'].items() %}
    {{k}}: {{v}}
    {% endfor %}
    @classmethod
    def deserialize(cls, data_str: str):
        result = {{name}}_res
        data = json.loads(data_str)
        {% for k, v in proto['req'].items() %}
        result.{{k}} = data["{{k}}"]
        {% endfor %}
        return result


class {{name}}_res:
    {% for k, v in proto['res'].items() %}
    {{k}}: {{v}}
    {% endfor %}
    def serialize(self):
        data = {}
        {% for k, v in proto['res'].items() %}
        data["{{k}}"] = self.{{k}}
        {% endfor %}
        return json.dumps(data, ensure_ascii=False)

{% endfor %}
